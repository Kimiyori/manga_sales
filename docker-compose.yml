services:
  web:
    build: ./src/backend
    command: gunicorn main:main --bind 0.0.0.0:8080 --worker-class aiohttp.GunicornWebWorker --timeout 1800 --reload
    working_dir: /aiohttp/src/backend
    volumes:
      - .:/aiohttp
    expose:
      - 8080
    depends_on:
      - db
    restart: on-failure
  frontend:
    build: ./src/frontend
    container_name: dev-react
    command: npm start --host 0.0.0.0 --port 3000
    ports:
      - 3000:3000
    volumes:
      - ./src/frontend:/react-docker:delegated
      - /react-docker/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true # create-ui-app >= 5.x

    depends_on:
      - web
    restart: always
  db:
    image: postgres:14
    working_dir: /aiohttp/src/backend/.
    env_file:
      - ./src/backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - web
    ports:
      - 8080:8080
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - .:/aiohttp
  test:
    build: .
    command: python -m  pytest
    working_dir: /aiohttp
    profiles: [ "test_profile" ]
    volumes:
      - .:/aiohttp
    depends_on:
      - db
  lint:
    build: .
    command: bash -c "mypy src ; pylint src ; flake8"
    working_dir: /aiohttp
    profiles: [ "test_profile" ]
    volumes:
      - .:/aiohttp
volumes:
  postgres_data:
