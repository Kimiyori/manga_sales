services:
  backend:
    build: ./src/backend
    command: gunicorn config.main:main --bind 0.0.0.0:8080 --worker-class aiohttp.GunicornWebWorker --timeout 1800 --reload
    working_dir: /aiohttp/src/backend
    volumes:
      - .:/aiohttp
    expose:
      - 8080
    depends_on:
      - db
    restart: always
  frontend:
    build: ./src/frontend
    command: npm start --host 0.0.0.0 --port 3000
    expose:
      - 3000
    volumes:
      - ./src/frontend:/react-docker:delegated
      - /react-docker/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true 
    depends_on:
      - backend
    restart: always
  db:
    image: postgres:14
    working_dir: /aiohttp/src/backend/.
    env_file:
      - ./src/backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
  nginx:
    image: nginx:latest
    ports:
      - 8080:81
      - 3000:80
      - 443:443
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - .:/aiohttp
    restart: always 
  certbot:
    image: certbot/certbot
  test:
    build: ./src/backend
    command: python -m  pytest
    working_dir: /aiohttp/src/backend
    profiles: [ "test_profile" ]
    volumes:
      - .:/aiohttp
    depends_on:
      - db
  lint:
    build: ./src/backend
    command: bash -c "mypy . ; pylint . ; flake8"
    working_dir: /aiohttp/src/backend/.
    profiles: [ "test_profile" ]
    volumes:
      - .:/aiohttp
volumes:
  postgres_data: