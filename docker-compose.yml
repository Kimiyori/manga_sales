services:
  backend:
    build: ./src/backend
    command: gunicorn config.main:main --bind 0.0.0.0:8080 --worker-class aiohttp.GunicornWebWorker --timeout 1800 --reload
    working_dir: /aiohttp/src/backend
    volumes:
      - .:/aiohttp
    ports:
      - 8080:8080
    depends_on:
      - db
    restart: always
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    command: npm start
    ports:
      - 3000:3000
    volumes:
      - ./src/frontend:/react-docker:delegated
      - /react-docker/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    restart: always
  db:
    image: postgres:14
    working_dir: /aiohttp/src/backend/.
    env_file:
      - ./src/backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
  nginx:
    build:
      context: ./nginx/dev
      dockerfile: Dockerfile.dev
    ports:
      - 81:81
      - 80:80
      - 443:443
    volumes:
      - .:/aiohttp
    restart: always
    depends_on:
      - backend
      - frontend
volumes:
  postgres_data:
