services:
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    command: npm start
    ports:
      - 3000:3000
    volumes:
      - ./src/frontend:/react-docker:delegated
      - /react-docker/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_BACKEND_URL=/api
    restart: always
  nginx:
    build:
      context: ./nginx/dev
      dockerfile: Dockerfile.dev
    ports:
      - 81:81
      - 80:80
      - 443:443
    volumes:
      - .:/aiohttp
    restart: always
    depends_on:
      - backend
      - frontend
  test_backend:
    build: ./src/backend
    command: python -m  pytest
    working_dir: /aiohttp/src/backend
    profiles: [ "test_profile" ]
    depends_on:
      - db
  lint_backend:
    build: ./src/backend
    command: bash -c "mypy . ; pylint . ; flake8"
    working_dir: /aiohttp/src/backend/.
    profiles: [ "test_profile" ]
  test_frontend:
    build: 
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    command: npx react-scripts test --watchAll=false --testPathIgnorePatterns 'fakeData'
    working_dir: /react-docker
    profiles: [ "test_profile" ]
  lint_frontend:
    build: 
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    command: npx eslint
    working_dir: /react-docker
    profiles: [ "test_profile" ]
