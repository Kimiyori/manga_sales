
upstream backend {
    server backend:8080;
}

upstream frontend {
    server frontend:3000;
}

server {
    listen 80;

    server_name mangastats.ru;
    add_header Access-Control-Allow-Origin *;

    location / {
        return 301 https://$host$request_uri; # redirect all non https requests to https
    }
    location /.well-known/acme-challenge/ {
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
        root /var/www/certbot;
    }
}
server {
    listen 81;
    server_name api.mangastats.ru;
    add_header Access-Control-Allow-Origin *;

    location / {
        proxy_pass http://backend/;
    }

    location ~ \.(jpg|png)$ {
        root /aiohttp/src/backend/static/images;
    }
}
server {
    # new server, but for ssl (443 port)
    listen 443 ssl; # listen 443 port
    server_name mangastats.ru;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/mangastats.ru/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/mangastats.ru/privkey.pem; # <-this
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://frontend/;
    }
}